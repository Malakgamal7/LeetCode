class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        
        Arrays.sort(nums);
        List<List<Integer>> ans = new LinkedList<List<Integer>>();
        int left;
        int right;
        for(int i = 0; i<nums.length-2;i++){
            if(i>0 && nums[i]==nums[i-1]){
                continue;
            }
            left = i+1;
            right = nums.length - 1;
            int diff = 0 - nums[i];
            while(left<right){
            if(nums[right]+nums[left] == diff){
                ArrayList<Integer> miniAns = new ArrayList<>();
                miniAns.add(nums[i]);
                miniAns.add(nums[left]);
                miniAns.add(nums[right]);
                ans.add(miniAns);
                while(left<right && nums[left]==nums[left+1]){
                    left++;
                }
                while(left<right &&nums[right]==nums[right-1]){
                    right--;
                }
                left++;
                right--;
            } else if(diff<(nums[left] + nums[right])){
                right --;
            }else if(diff>(nums[left] + nums[right])){
                left ++;
            }
            }

        }

        return ans;
    }
}
